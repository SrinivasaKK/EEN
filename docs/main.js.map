{"version":3,"sources":["./src/app/constant.ts","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/services/auth.interceptor.ts","./src/environments/environment.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/app.module.ts","./src/app/cameras/cameras.component.ts","./src/app/cameras/cameras.component.html","./src/app/services/navigator.service.ts","./src/app/services/auth.service.ts","./src/app/services/token.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/camera-detail/camera-detail.component.ts","./src/app/camera-detail/camera-detail.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,gBAAgB,GAAG,cAAc,CAAC;AAExC,MAAM,iBAAiB,GAAG,eAAe,CAAC;AAE1C,MAAM,aAAa,GAAG,YAAY,CAAC;AAEnC,MAAM,eAAe,GAAG,aAAa,CAAC;AACtC,MAAM,kBAAkB,GAAG,gBAAgB,CAAC;AAE5C,MAAM,iBAAiB,GAAG,eAAe,CAAC;AAE1C,MAAM,YAAY,GAAG,iCAAiC,CAAC;AAEvD,MAAM,cAAc,GAAG,GAAG,YAAY,aAAa,CAAC;AAEpD,MAAM,gBAAgB,GAAG,GAAG,YAAY,sCAAsC,CAAC;AAE/E,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;AAE7C,MAAM,YAAY,GAAG;IAC1B,aAAa,EAAE,eAAe;IAC9B,UAAU,EAAE,YAAY;IACxB,SAAS,EAAE,UAAU;IACrB,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,+BAA+B;IAC3C,cAAc,EAAE,UAAU;IAC1B,cAAc,EAAE,UAAU;IAC1B,cAAc,EAAE,6BAA6B;IAC7C,cAAc,EAAE,4BAA4B;IAC5C,WAAW,EAAE,oBAAoB;IACjC,WAAW,EAAE,QAAQ;IACrB,iBAAiB,EAAE,OAAO;IAC1B,kBAAkB,EAAE,sBAAsB;IAC1C,iBAAiB,EAAE,SAAS;IAC5B,YAAY,EAAE,UAAU;IACxB,MAAM,EAAE,QAAQ;IAChB,kBAAkB,EAAE,oBAAoB;IACxC,aAAa,EAAE,eAAe;IAC9B,eAAe,EAAE,iBAAiB;IAClC,EAAE,EAAE,IAAI;IACR,eAAe,EAAE,iBAAiB;CACnC,CAAC;AAEK,MAAM,UAAU,GAAG;IACxB,KAAK,EAAE,OAAO;IACd,OAAO,EAAE,SAAS;CACnB,CAAC;;;;;;;;;;;;;AC/CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKF;;;;;;;;;ICH9C,uEAKG;IADD,ySAAkB;IACjB,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAAA,uDAAuB;IAAA,4DACpD;;;IAD6B,0DAAuB;IAAvB,yFAAuB;;ADIhD,MAAM,eAAe;IAE1B,YACS,WAAwB,EACvB,gBAAkC,EACnC,cAA8B;QAF9B,gBAAW,GAAX,WAAW,CAAa;QACvB,qBAAgB,GAAhB,gBAAgB,CAAkB;QACnC,mBAAc,GAAd,cAAc,CAAgB;QAJvC,UAAK,GAAG,sDAAY,CAAC;IAKlB,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;IAC1C,CAAC;;8EAbU,eAAe;+FAAf,eAAe;QCX5B,4EACE;QAAA,qEAAI;QAAA,uDAAuB;QAAA,4DAAK;QAChC,uGAKG;QAEL,4DAAS;;QARH,0DAAuB;QAAvB,sFAAuB;QAEzB,0DAAuD;QAAvD,gHAAuD;;6FDQ9C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAST;AAEe;;;;;AAK1C,MAAM,eAAe;IAC1B,YACU,gBAAkC,EAClC,cAA8B,EAC9B,WAAwB;QAFxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;IAC/B,CAAC;IAEJ,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACnD,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;QAE3D,IAAI,KAAK,EAAE;YACT,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,KAAK,EAAE;iBACjC;aACF,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,cAAc,EAAE,kBAAkB;iBACnC;aACF,CAAC,CAAC;SACJ;QAED,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;SAC3D,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,0DAAG,CAAC,CAAC,KAAqB,EAAE,EAAE;YAC5B,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,WAAW;qBACb,YAAY,CAAC,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC;qBAC7C,SAAS,CAAC,GAAG,EAAE;oBACd,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC;aACN;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;aACzC;YACD,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;8EAhDU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACfX;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAIzD,MAAM,WAAW,GAAqB;IAC3C,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,UAAU;IACnB,aAAa,EAAE,kCAAkC;CAClD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACnBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACa;AACL;AACC;;AAMjD,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBAHd,CAAC,4DAAY,EAAE,oEAAa,EAAE,qEAAgB,CAAC;mIAG7C,YAAY,mBAJR,wEAAe,aACpB,4DAAY,EAAE,oEAAa,EAAE,qEAAgB,aAC7C,wEAAe;6FAEd,YAAY;cALxB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,wEAAe,CAAC;gBAC/B,OAAO,EAAE,CAAC,4DAAY,EAAE,oEAAa,EAAE,qEAAgB,CAAC;gBACxD,OAAO,EAAE,CAAC,wEAAe,CAAC;aAC3B;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QAAA,wEAAyB;QACzB,2EAA+B;QACjC,4DAAM;;6FDIO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;AAcpC,MAAM,SAAS;IACpB,YACU,WAAwB,EACxB,cAA8B,EAC9B,gBAAkC;QAFlC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;IACzC,CAAC;IAEJ,WAAW,CACT,IAA4B,EAC5B,KAA0B;QAE1B,MAAM,GAAG,GAAW,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC;QAE/B,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,mBAAmB,CAAC,GAAW;QAC7B,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC;QAEnC,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;IAC1C,CAAC;;kEAxBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AACT;AACU;AACkB;AACb;AACiB;AACb;AACT;AACE;AACJ;AACW;AACY;AACrB;AACF;AACD;AACS;AACiB;AACrB;;AAE3D,uCAAuC;AACvC,IAAI,yEAAW,CAAC,UAAU,EAAE;IAC1B,OAAO,CAAC,GAAG,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;CACxB;AAiCM,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBATT;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,0EAAe;YACzB,KAAK,EAAE,IAAI;SACZ;KACF,YAtBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,kEAAmB;YACnB,0DAAW;YACX,qEAAa;YACb,qEAAa;YACb,gFAAkB;YAClB,sEAAc;YACd,4FAAuB;YACvB,4FAAwB;YACxB,uEAAc;YACd,yEAAe;YACf,mEAAY;SACb;mIAUU,SAAS,mBA9BlB,2DAAY;QACZ,qEAAc;QACd,4EAAgB;QAChB,6FAAqB,aAGrB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,kEAAmB;QACnB,0DAAW;QACX,qEAAa;QACb,qEAAa;QACb,gFAAkB;QAClB,sEAAc;QACd,4FAAuB;QACvB,4FAAwB;QACxB,uEAAc;QACd,yEAAe;QACf,mEAAY;6FAWH,SAAS;cAhCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,4EAAgB;oBAChB,6FAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,kEAAmB;oBACnB,0DAAW;oBACX,qEAAa;oBACb,qEAAa;oBACb,gFAAkB;oBAClB,sEAAc;oBACd,4FAAuB;oBACvB,4FAAwB;oBACxB,uEAAc;oBACd,yEAAe;oBACf,mEAAY;iBACb;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,0EAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGW;;;;;;;;;;;ICDzD,yEAA8C;;;IADhD,yEACE;IAAA,kIAAgC;IAClC,4DAAM;;;IADS,0DAAkB;IAAlB,mFAAkB;;;;IAEjC,8EAKE;IAHA,qXAA2C;IAG3C,iFACE;IAAA,uDACF;IAAA,4DAAiB;IACjB,oFAAmB;IAAA,uDAAyB;IAAA,4DAAoB;IAChE,mFACE;IAAA,4EAME;IAFA,mXAA2C;IAE3C,2EAAU;IAAA,0EAAe;IAAA,4DAAW;IAAA,uDACtC;IAAA,4DAAS;IACX,4DAAmB;IACrB,4DAAW;;;;IAbP,0DACF;IADE,0FACF;IACmB,0DAAyB;IAAzB,gGAAyB;IAQJ,0DACtC;IADsC,oGACtC;;ADVC,MAAM,gBAAgB;IAI3B,YACU,WAAwB,EACxB,gBAAkC,EAClC,cAA8B;QAF9B,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QANxC,eAAU,GAAG,KAAK,CAAC;QACnB,eAAU,GAA0B,EAAE,CAAC;QACvC,UAAK,GAAG,sDAAY,CAAC;IAKlB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpD,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAQ,CAAC;YAC7C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,0DAAgB,CAAC,CAAC,SAAS,CAC9C,CAAC,QAA+B,EAAE,EAAE;YAClC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,QAAgB;QAC/B,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;SACzD;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,sDAAY,CAAC,kBAAkB,CAAC,CAAC;SAC9C;IACH,CAAC;;gFAvCU,gBAAgB;gGAAhB,gBAAgB;QCX7B,sEACE;QAAA,4GACE;QAEF,uHAKE;QAeJ,4DAAM;;QAvB+B,0DAAkB;QAAlB,gFAAkB;QAInD,0DAAgD;QAAhD,mFAAgD;;6FDMvC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEA;;;AAIpC,MAAM,gBAAgB;IAC3B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oDAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,uBAAuB,CAAC,QAAgB;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oDAAU,CAAC,OAAO,EAAE,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;;gFAbU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAMb;AACgB;AACG;AAO1B;AAGwC;;;;AAG/D,MAAM,OAAO,GAAG;IACd,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,aAAa,EACX,QAAQ,GAAG,IAAI,CAAC,qEAAW,CAAC,OAAO,GAAG,GAAG,GAAG,qEAAW,CAAC,aAAa,CAAC;KACzE,CAAC;CACH,CAAC;AAKK,MAAM,WAAW;IAoBtB,YACU,IAAgB,EAChB,cAA8B;QAD9B,SAAI,GAAJ,IAAI,CAAY;QAChB,mBAAc,GAAd,cAAc,CAAgB;QArBhC,wBAAmB,GAAG,KAAK,CAAC;QAuBpC,gBAAW,GAAG,EAAE,CAAC;IADd,CAAC;IApBJ,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,IAAI,cAAc,CAAC,KAAc;QAC/B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IACnC,CAAC;IAEO,WAAW,CAAC,KAAwB;QAC1C,OAAO,CAAC,KAAK,CACX,yBAAyB,KAAK,CAAC,MAAM,IAAI;YACvC,aAAa,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAC7C,CAAC;QAEF,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAOD,KAAK,CAAC,SAAqB;QACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;QACzC,MAAM,IAAI,GAAG,IAAI,+DAAU,EAAE;aAC1B,GAAG,CAAC,sDAAY,CAAC,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC;aAC/C,GAAG,CAAC,sDAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC;aAC9C,GAAG,CAAC,sDAAY,CAAC,UAAU,EAAE,sDAAY,CAAC,QAAQ,CAAC,CAAC;QAEvD,MAAM,aAAa,GAAG,GAAG,wDAAc,IAAI,sDAAY,CAAC,UAAU,IAAI,sDAAY,CAAC,QAAQ,IAAI,sDAAY,CAAC,KAAK,UAAU,sDAAY,CAAC,SAAS,IAAI,SAAS,CAAC,QAAQ,IAAI,sDAAY,CAAC,QAAQ,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC;QACzN,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,YAAY,CAAC,IAAS;QACpB,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;QACxC,MAAM,IAAI,GAAG,IAAI,+DAAU,EAAE;aAC1B,GAAG,CAAC,GAAG,sDAAY,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;aACxD,GAAG,CAAC,GAAG,sDAAY,CAAC,UAAU,EAAE,EAAE,GAAG,sDAAY,CAAC,aAAa,EAAE,CAAC,CAAC;QACtE,MAAM,oBAAoB,GAAG,GAAG,wDAAc,IAC5C,sDAAY,CAAC,UACf,IAAI,sDAAY,CAAC,aAAa,IAAI,sDAAY,CAAC,KAAK,UAClD,sDAAY,CAAC,aACf,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,EAAE,CAAC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,0DAAgB,CAAC,CAAC,SAAS,CACrC,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;YACzC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,GAAW;QACb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAM,GAAG,sDAAY,GAAG,GAAG,EAAE,CAAC;aACjC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,CAAC,GAAW,EAAE,IAAI,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE;QACvC,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAM,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC;aAC7B,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,MAAM,CAAC,GAAG;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,GAAG,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACvE,CAAC;;sEA7EU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAA2C;AAQpB;;AAKhB,MAAM,cAAc;IACzB,gBAAe,CAAC;IAEhB,cAAc;QACZ,OAAO,YAAY,CAAC,OAAO,CAAC,0DAAgB,CAAC,CAAC;IAChD,CAAC;IAED,eAAe;QACb,OAAO,YAAY,CAAC,OAAO,CAAC,2DAAiB,CAAC,CAAC;IACjD,CAAC;IAED,eAAe,CAAC,KAAK;QACnB,YAAY,CAAC,OAAO,CAAC,0DAAgB,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,gBAAgB,CAAC,YAAY;QAC3B,YAAY,CAAC,OAAO,CAAC,2DAAiB,EAAE,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,iBAAiB;QACf,YAAY,CAAC,UAAU,CAAC,0DAAgB,CAAC,CAAC;IAC5C,CAAC;IAED,kBAAkB;QAChB,YAAY,CAAC,UAAU,CAAC,2DAAiB,CAAC,CAAC;IAC7C,CAAC;IAED,WAAW,CAAC,KAAK;QACf,YAAY,CAAC,OAAO,CAAC,uDAAa,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,cAAc;QACZ,OAAO,YAAY,CAAC,OAAO,CAAC,uDAAa,CAAC,CAAC;IAC7C,CAAC;IAED,gBAAgB,CAAC,QAAQ,EAAE,KAAK;QAC9B,YAAY,CAAC,OAAO,CAAC,GAAG,4DAAkB,IAAI,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;IAED,gBAAgB,CAAC,QAAQ;QACvB,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,4DAAkB,IAAI,QAAQ,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,eAAe,CAAC,QAAQ,EAAE,KAAK;QAC7B,YAAY,CAAC,OAAO,CAAC,GAAG,2DAAiB,IAAI,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,eAAe,CAAC,QAAQ;QACtB,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,2DAAiB,IAAI,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,YAAY,CAAC,OAAO,CAAC,yDAAe,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,aAAa;QACX,OAAO,YAAY,CAAC,OAAO,CAAC,yDAAe,CAAC,CAAC;IAC/C,CAAC;;4EAzDU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACQ;AACN;AACT;AACgC;AACxC;;;AACxC,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,oDAAU,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IAC/D;QACE,IAAI,EAAE,oDAAU,CAAC,OAAO;QACxB,WAAW,EAAE,CAAC,4DAAS,CAAC;QACxB,SAAS,EAAE,2EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,GAAG,oDAAU,CAAC,OAAO,MAAM;QACjC,WAAW,EAAE,CAAC,4DAAS,CAAC;QACxB,SAAS,EAAE,4FAAqB;KACjC;IACD,EAAE,IAAI,EAAE,oDAAU,CAAC,KAAK,EAAE,SAAS,EAAE,qEAAc,EAAE;IAErD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;CAClC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAU1B;AAOqB;;;;;;;;;;;;;;ICfzC,yEAA8C;;;IADhD,yEACE;IAAA,gIAAgC;IAClC,4DAAM;;;IADS,0DAAkB;IAAlB,mFAAkB;;;IAezB,uEAKG;IAAA,uDAA0B;IAAA,4DAC5B;;;IADE,0DAA0B;IAA1B,4FAA0B;;;IAe7B,uEAKG;IAAA,uDAA0B;IAAA,4DAC5B;;;IADE,0DAA0B;IAA1B,4FAA0B;;;;IAtCrC,8EACE;IAAA,0EACE;IAD4B,8TAA2B;IACvD,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,oFACE;IAAA,4EAAW;IAAA,uDAA2B;IAAA,4DAAY;IAClD,sEAOA;IAAA,4EACE;IAAA,uHAKG;IAEL,4DAAY;IACd,4DAAiB;IACjB,qFACE;IAAA,6EAAW;IAAA,wDAA2B;IAAA,4DAAY;IAClD,uEAQA;IAAA,6EACE;IAAA,yHAKG;IAEL,4DAAY;IACd,4DAAiB;IACjB,2EACE;IAAA,8EAME;IAAA,4EAAU;IAAA,iEAAK;IAAA,4DAAW;IAAA,wDAC5B;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAO;IACT,4DAAW;;;IApDH,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAsB;IAAtB,wFAAsB;IAEb,0DAA2B;IAA3B,sGAA2B;IAGpC,0DAAwC;IAAxC,+GAAwC;IAExC,6FAA6B;IAK3B,0DAGC;IAHD,qJAGC;IAMM,0DAA2B;IAA3B,sGAA2B;IAIpC,0DAAwC;IAAxC,+GAAwC;IAExC,6FAA6B;IAK3B,0DAGC;IAHD,qJAGC;IAQH,0DAA6B;IAA7B,6FAA6B;IAIH,0DAC5B;IAD4B,yGAC5B;;ADlCD,MAAM,mBAAmB;IAC9B,YAAY,CACV,OAA2B,EAC3B,IAAwC;QAExC,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CACP,OAAO;YACP,OAAO,CAAC,OAAO;YACf,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAClD,CAAC;IACJ,CAAC;CACF;AAOM,MAAM,cAAc;IAOzB,YACU,WAAwB,EACxB,gBAAkC,EAClC,WAAwB,EACxB,cAA8B;QAH9B,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAVxC,UAAK,GAAG,sDAAY,CAAC;QAErB,aAAQ,GAAG,EAAE,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACd,eAAU,GAAG,KAAK,CAAC;QACnB,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;IAMjC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CACpD,CAAC,QAA2B,EAAE,EAAE;YAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;QAC5C,CAAC,EACD,CAAC,KAAyB,EAAE,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,KAAK,CAAC;YACxC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;;4EA3CU,cAAc;8FAAd,cAAc;QCvC3B,yEACE;QAAA,0GACE;QAEF,sHACE;QAqDJ,4DAAM;;QAzD+B,0DAAkB;QAAlB,gFAAkB;QAG3C,0DAAmB;QAAnB,iFAAmB;;6FDmClB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEtCD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACXpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAQW;;;;;;;;;;;;ICNzD,yEAA8C;;;IADhD,yEACE;IAAA,uIAAgC;IAClC,4DAAM;;;IADS,0DAAkB;IAAlB,mFAAkB;;;;IAEjC,8EACE;IAAA,iFACE;IAAA,uDACF;IAAA,4DAAiB;IACjB,oFACG;IAAA,uDAA2C;IAAA,4DAC7C;IACD,mFACE;IAAA,4EAME;IAFA,oUAA2B;IAE3B,2EAAU;IAAA,6EAAkB;IAAA,4DAAW;IAAA,uDACzC;IAAA,4DAAS;IACT,6EAME;IAFA,2VAA0C;IAE1C,4EAAU;IAAA,wEAAY;IAAA,4DAAW;IAAA,wDACnC;IAAA,4DAAS;IACX,4DAAmB;IACrB,4DAAW;;;IAvBP,0DACF;IADE,oGACF;IAEG,0DAA2C;IAA3C,6HAA2C;IASH,0DACzC;IADyC,yGACzC;IAOmC,0DACnC;IADmC,oGACnC;;;IAIJ,8EACE;IAAA,iFACE;IAAA,uDACF;IAAA,4DAAiB;IACjB,oFACG;IAAA,uDACkC;IAAA,4DACpC;IACD,oFACG;IAAA,uDAC8B;IAAA,4DAChC;IACD,oFACG;IAAA,uDACgC;IAAA,4DAClC;IACD,oFACG;IAAA,wDAC+B;IAAA,4DACjC;IACH,4DAAW;;;IAlBP,0DACF;IADE,iIACF;IAEG,0DACkC;IADlC,qJACkC;IAGlC,0DAC8B;IAD9B,4IAC8B;IAG9B,0DACgC;IADhC,gJACgC;IAGhC,0DAC+B;IAD/B,+IAC+B;;ADhC/B,MAAM,qBAAqB;IAMhC,YACU,WAAwB,EACxB,cAA8B,EAC9B,gBAAkC,EAClC,cAA8B;QAH9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QATxC,eAAU,GAAG,KAAK,CAAC;QACnB,UAAK,GAAG,sDAAY,CAAC;QACrB,aAAQ,GAAG,IAAI,CAAC;QAChB,iBAAY,GAAG,IAAI,CAAC;QACpB,iBAAY,GAAwB,IAAI,CAAC;QAOvC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,KAAU,CAAC;IAEnB,gBAAgB,CAAC,QAAgB;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,QAAQ,EAAE;YACZ,6DAA6D;YAE7D,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC/D,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAQ,CAAC;gBAC/C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,OAAO;aACR;YAED,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,0DAAgB,IAAI,QAAQ,EAAE,CAAC,CAAC,SAAS,CAC/D,CAAC,QAA6B,EAAE,EAAE;gBAChC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAE7B,uBAAuB;gBACvB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAClC,QAAQ,EACR,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CACzB,CAAC;gBACF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC,EACD,CAAC,KAA6B,EAAE,EAAE;gBAChC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC,CACF,CAAC;SACH;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,SAAS,CAAC,QAAgB;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,QAAQ,EAAE;YACZ,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC9D,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAQ,CAAC;gBAC/C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,OAAO;aACR;YACD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,0DAAgB,IAAI,QAAQ,SAAS,CAAC,CAAC,SAAS,CACtE,CAAC,QAAmC,EAAE,EAAE;gBACtC,uBAAuB;gBACvB,IAAI,CAAC,cAAc,CAAC,eAAe,CACjC,QAAQ,EACR,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CACzB,CAAC;gBACF,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC,EACD,CAAC,KAA6B,EAAE,EAAE;gBAChC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC,CACF,CAAC;SACH;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;IAC5C,CAAC;;0FApFU,qBAAqB;qGAArB,qBAAqB;QCjBlC,sEACE;QAAA,iHACE;QAEF,4HACE;QA0BF,6HACE;QAoBJ,4DAAM;;QAnD+B,0DAAkB;QAAlB,gFAAkB;QAG3C,0DAAoB;QAApB,kFAAoB;QA2BpB,0DAAoB;QAApB,kFAAoB;;6FDdnB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;AEhBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["export const ACCESS_TOKEN_KEY = 'access_token';\r\n\r\nexport const REFRESH_TOKEN_KEY = 'refresh_token';\r\n\r\nexport const LOGGED_IN_KEY = 'isLoggedIn';\r\n\r\nexport const CAMERA_LIST_KEY = 'camera_list';\r\nexport const CAMERA_DETAILS_KEY = 'camera_details';\r\n\r\nexport const CAMERA_STATUS_KEY = 'camera_status';\r\n\r\nexport const BASE_API_URL = 'https://rest.cameramanager.com/';\r\n\r\nexport const OAUTH_END_PONT = `${BASE_API_URL}oauth/token`;\r\n\r\nexport const LOGOUT_END_POINT = `${BASE_API_URL}/rest/v2.0/users/self/tokens/current`;\r\n\r\nexport const CAMERA_END_POINT = `rest/v2.4/cameras`;\r\n\r\nexport const STATIC_TEXTS = {\r\n  REFRESH_TOKEN: 'refresh_token',\r\n  GRANT_TYPE: 'grant_type',\r\n  USER_NAME: 'username',\r\n  PASSWORD: 'password',\r\n  SCOPE: 'scope',\r\n  LOGIN_TEXT: 'Log in to Access Your Cameras',\r\n  USERNAME_LABEL: 'Username',\r\n  PASSWORD_LABEL: 'Password',\r\n  USERNAME_ERROR: 'Please enter your user name',\r\n  PASSWORD_ERROR: 'Please enter your password',\r\n  HEADER_TEXT: 'Eagle Eye Networks',\r\n  LOGOUT_TEXT: 'Logout',\r\n  LOGIN_BUTTON_TEXT: 'Login',\r\n  NO_CAMERA_ID_ERROR: 'No camera Id present',\r\n  BACK_BUTTON_LABEL: 'Go Back',\r\n  SHOW_DETAILS: 'See More',\r\n  ONLINE: 'Online',\r\n  RECORDING_ON_CLOUD: 'Recording On Cloud',\r\n  AUDIO_ENABLED: 'Audio Enabled',\r\n  FIRMWARE_STATUS: 'Firmware Status',\r\n  ID: 'Id',\r\n  RECORDING_ON_SD: 'Recording On SD',\r\n};\r\n\r\nexport const APP_ROUTES = {\r\n  LOGIN: 'login',\r\n  CAMERAS: 'cameras',\r\n};\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { StorageService } from 'src/app/services/token.service';\nimport { STATIC_TEXTS } from './../../constant';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  TEXTS = STATIC_TEXTS;\n  constructor(\n    public authService: AuthService,\n    private navigatorService: NavigatorService,\n    public storageService: StorageService\n  ) {}\n\n  ngOnInit(): void {}\n\n  logout(): void {\n    this.authService.logout();\n    this.navigatorService.navigateToLogin();\n  }\n}\n","<header id=\"header\">\n  <h2>{{ TEXTS.HEADER_TEXT }}</h2>\n  <a\n    *ngIf=\"this.storageService.isUserLoggedIn() === 'true'\"\n    mat-flat-button\n    color=\"primary\"\n    (click)=\"logout()\"\n    ><mat-icon>logout</mat-icon>{{ TEXTS.LOGOUT_TEXT }}</a\n  >\n</header>\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { throwError } from 'rxjs';\r\nimport { StorageService } from './token.service';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\nimport { NavigatorService } from './navigator.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private navigatorService: NavigatorService,\r\n    private storageService: StorageService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): any {\r\n    const token = this.storageService.getAccessToken();\r\n    const refreshToken = this.storageService.getRefreshToken();\r\n\r\n    if (token) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (!request.headers.has('Content-Type')) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          'content-type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n\r\n    request = request.clone({\r\n      headers: request.headers.set('Accept', 'application/json'),\r\n    });\r\n\r\n    return next.handle(request).pipe(\r\n      map((event: HttpEvent<any>) => {\r\n        return event;\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 401) {\r\n          this.authService\r\n            .refreshToken({ refresh_token: refreshToken })\r\n            .subscribe(() => {\r\n              location.reload();\r\n            });\r\n        } else {\r\n          this.navigatorService.navigateToLogin();\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { EnvironmentModel } from './environment.model';\n\nexport const environment: EnvironmentModel = {\n  production: false,\n  API_KEY: 'dev_test',\n  CLIENT_SECRET: '3H1Bf6mCctIgpCuzvrnyekf3VhAUEnKJ',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n@NgModule({\r\n  declarations: [HeaderComponent],\r\n  imports: [CommonModule, MatIconModule, HttpClientModule],\r\n  exports: [HeaderComponent],\r\n})\r\nexport class SharedModule {}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'camera-list';\n}\n","<div class=\"container-fluid\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { NavigatorService } from '../services/navigator.service';\r\nimport { AuthService } from './../services/auth.service';\r\nimport { StorageService } from './../services/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private storageService: StorageService,\r\n    private navigatorService: NavigatorService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    const url: string = state?.url;\r\n\r\n    return this.isUserAuthenticated(url);\r\n  }\r\n\r\n  isUserAuthenticated(url: string): boolean {\r\n    if (this.storageService.getRefreshToken()) {\r\n      return true;\r\n    }\r\n\r\n    this.authService.redirectUrl = url;\r\n\r\n    this.navigatorService.navigateToLogin();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from './shared/shared.module';\nimport { CamerasComponent } from './cameras/cameras.component';\nimport { CameraDetailComponent } from './camera-detail/camera-detail.component';\nimport { environment } from 'src/environments/environment';\n\n// disable logs if app is in production\nif (environment.production) {\n  console.log = () => {};\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CamerasComponent,\n    CameraDetailComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatButtonModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { CameraResponseModel } from '../models/response.model';\nimport { CAMERA_END_POINT, STATIC_TEXTS } from '../constant';\nimport { NavigatorService } from '../services/navigator.service';\nimport { StorageService } from '../services/token.service';\n@Component({\n  selector: 'app-cameras',\n  templateUrl: './cameras.component.html',\n  styleUrls: ['./cameras.component.scss'],\n})\nexport class CamerasComponent implements OnInit {\n  showLoader = false;\n  cameraList: CameraResponseModel[] = [];\n  TEXTS = STATIC_TEXTS;\n  constructor(\n    private authService: AuthService,\n    private navigatorService: NavigatorService,\n    private storageService: StorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.showLoader = true;\n\n    const details = this.storageService.getCameraList();\n    if (details) {\n      this.cameraList = JSON.parse(details) as any;\n      this.showLoader = false;\n      return;\n    }\n\n    this.authService.get(CAMERA_END_POINT).subscribe(\n      (response: CameraResponseModel[]) => {\n        this.storageService.setCameraList(JSON.stringify(response));\n        this.cameraList = response;\n        this.showLoader = false;\n      },\n      (error) => {\n        console.log(error);\n        this.showLoader = false;\n      }\n    );\n  }\n\n  getCameraDetails(cameraId: Number) {\n    if (cameraId) {\n      this.navigatorService.navigateToCameraDetails(cameraId);\n    } else {\n      console.log(STATIC_TEXTS.NO_CAMERA_ID_ERROR);\n    }\n  }\n}\n","<div>\n  <div class=\"example-loading-shade\" *ngIf=\"showLoader\">\n    <mat-spinner *ngIf=\"showLoader\"></mat-spinner>\n  </div>\n  <mat-card\n    *ngFor=\"let camera of cameraList; let i = index\"\n    (click)=\"getCameraDetails(camera.cameraId)\"\n    class=\"mat-card-camera\"\n  >\n    <mat-card-title>\n      {{ camera.name }}\n    </mat-card-title>\n    <mat-card-subtitle>ID: {{ camera.cameraId }}</mat-card-subtitle>\n    <mat-card-actions>\n      <button\n        type=\"submit\"\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"getCameraDetails(camera.cameraId)\"\n      >\n        <mat-icon>arrow_right_alt</mat-icon>{{ TEXTS.SHOW_DETAILS }}\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { APP_ROUTES } from './../constant';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigatorService {\n  constructor(private router: Router) {}\n\n  navigateToLogin() {\n    this.router.navigate([APP_ROUTES.LOGIN]);\n  }\n\n  navigateToCameras() {\n    this.router.navigate([APP_ROUTES.CAMERAS]);\n  }\n\n  navigateToCameraDetails(cameraId: Number) {\n    this.router.navigate([APP_ROUTES.CAMERAS, `${cameraId}`]);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpHeaders,\r\n  HttpParams,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { StorageService } from './token.service';\r\nimport {\r\n  BASE_API_URL,\r\n  OAUTH_END_PONT,\r\n  STATIC_TEXTS,\r\n  LOGOUT_END_POINT,\r\n} from './../constant';\r\n\r\nimport { PostResponseModel } from '../models/response.model';\r\nimport { environment } from './../../environments/environment';\r\nimport { LoginModel } from '../models/login.model';\r\n\r\nconst OPTIONS = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    Authorization:\r\n      'Basic ' + btoa(environment.API_KEY + ':' + environment.CLIENT_SECRET),\r\n  }),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private isUserLoggedInValue = false;\r\n\r\n  get isUserLoggedIn(): boolean {\r\n    return this.isUserLoggedInValue;\r\n  }\r\n\r\n  set isUserLoggedIn(value: boolean) {\r\n    this.isUserLoggedInValue = value;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    console.error(\r\n      `Backend returned code ${error.status}, ` +\r\n        `body was: ${JSON.stringify(error.error)}`\r\n    );\r\n\r\n    return throwError(error);\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private storageService: StorageService\r\n  ) {}\r\n  redirectUrl = '';\r\n  login(loginData: LoginModel): Observable<PostResponseModel> {\r\n    this.storageService.removeAccessToken();\r\n    this.storageService.removeRefreshToken();\r\n    const body = new HttpParams()\r\n      .set(STATIC_TEXTS.USER_NAME, loginData.username)\r\n      .set(STATIC_TEXTS.PASSWORD, loginData.password)\r\n      .set(STATIC_TEXTS.GRANT_TYPE, STATIC_TEXTS.PASSWORD);\r\n\r\n    const loginEndPoint = `${OAUTH_END_PONT}?${STATIC_TEXTS.GRANT_TYPE}=${STATIC_TEXTS.PASSWORD}&${STATIC_TEXTS.SCOPE}=write&${STATIC_TEXTS.USER_NAME}=${loginData.username}&${STATIC_TEXTS.PASSWORD}=${loginData.password}`;\r\n    return this.post(loginEndPoint, body, OPTIONS);\r\n  }\r\n\r\n  refreshToken(data: any): Observable<any> {\r\n    this.storageService.removeAccessToken();\r\n    const body = new HttpParams()\r\n      .set(`${STATIC_TEXTS.REFRESH_TOKEN}`, data.refresh_token)\r\n      .set(`${STATIC_TEXTS.GRANT_TYPE}`, `${STATIC_TEXTS.REFRESH_TOKEN}`);\r\n    const refreshTokenEndPoint = `${OAUTH_END_PONT}?${\r\n      STATIC_TEXTS.GRANT_TYPE\r\n    }=${STATIC_TEXTS.REFRESH_TOKEN}&${STATIC_TEXTS.SCOPE}=write&${\r\n      STATIC_TEXTS.REFRESH_TOKEN\r\n    }=${this.storageService.getRefreshToken()}`;\r\n    return this.post(refreshTokenEndPoint, body);\r\n  }\r\n\r\n  logout(): void {\r\n    this.delete(LOGOUT_END_POINT).subscribe(\r\n      (response) => {\r\n        this.storageService.removeAccessToken();\r\n        this.storageService.removeRefreshToken();\r\n        this.storageService.setLoggedIn(false);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get(url: string): Observable<any> {\r\n    return this.http\r\n      .get<any>(`${BASE_API_URL}${url}`)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  post(url: string, body = {}, OPTIONS = {}): Observable<PostResponseModel> {\r\n    return this.http\r\n      .post<any>(url, body, OPTIONS)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  delete(url): Observable<any> {\r\n    return this.http.delete<any>(url).pipe(catchError(this.handleError));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ACCESS_TOKEN_KEY,\r\n  LOGGED_IN_KEY,\r\n  REFRESH_TOKEN_KEY,\r\n  CAMERA_DETAILS_KEY,\r\n  CAMERA_STATUS_KEY,\r\n  CAMERA_LIST_KEY,\r\n} from './../constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StorageService {\r\n  constructor() {}\r\n\r\n  getAccessToken(): string {\r\n    return localStorage.getItem(ACCESS_TOKEN_KEY);\r\n  }\r\n\r\n  getRefreshToken(): string {\r\n    return localStorage.getItem(REFRESH_TOKEN_KEY);\r\n  }\r\n\r\n  saveAccessToken(token): void {\r\n    localStorage.setItem(ACCESS_TOKEN_KEY, token);\r\n  }\r\n\r\n  saveRefreshToken(refreshToken): void {\r\n    localStorage.setItem(REFRESH_TOKEN_KEY, refreshToken);\r\n  }\r\n\r\n  removeAccessToken(): void {\r\n    localStorage.removeItem(ACCESS_TOKEN_KEY);\r\n  }\r\n\r\n  removeRefreshToken(): void {\r\n    localStorage.removeItem(REFRESH_TOKEN_KEY);\r\n  }\r\n\r\n  setLoggedIn(value): void {\r\n    localStorage.setItem(LOGGED_IN_KEY, value);\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    return localStorage.getItem(LOGGED_IN_KEY);\r\n  }\r\n\r\n  setCameraDetails(cameraID, value): void {\r\n    localStorage.setItem(`${CAMERA_DETAILS_KEY}_${cameraID}`, value);\r\n  }\r\n\r\n  getCameraDetails(cameraID): string {\r\n    return localStorage.getItem(`${CAMERA_DETAILS_KEY}_${cameraID}`);\r\n  }\r\n\r\n  setCameraStatus(cameraID, value): void {\r\n    localStorage.setItem(`${CAMERA_STATUS_KEY}_${cameraID}`, value);\r\n  }\r\n\r\n  getCameraStatus(cameraID): string {\r\n    return localStorage.getItem(`${CAMERA_STATUS_KEY}_${cameraID}`);\r\n  }\r\n\r\n  setCameraList(value): void {\r\n    localStorage.setItem(CAMERA_LIST_KEY, value);\r\n  }\r\n\r\n  getCameraList(): string {\r\n    return localStorage.getItem(CAMERA_LIST_KEY);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CamerasComponent } from './cameras/cameras.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { CameraDetailComponent } from './camera-detail/camera-detail.component';\nimport { APP_ROUTES } from './constant';\nconst routes: Routes = [\n  { path: '', redirectTo: APP_ROUTES.CAMERAS, pathMatch: 'full' },\n  {\n    path: APP_ROUTES.CAMERAS,\n    canActivate: [AuthGuard],\n    component: CamerasComponent,\n  },\n  {\n    path: `${APP_ROUTES.CAMERAS}/:id`,\n    canActivate: [AuthGuard],\n    component: CameraDetailComponent,\n  },\n  { path: APP_ROUTES.LOGIN, component: LoginComponent },\n\n  { path: '**', redirectTo: '404' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  NgForm,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {\n  ErrorResponseModel,\n  PostResponseModel,\n} from '../models/response.model';\nimport { StorageService } from '../services/token.service';\nimport { STATIC_TEXTS } from './../constant';\nimport { NavigatorService } from '../services/navigator.service';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../app.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  TEXTS = STATIC_TEXTS;\n  loginForm: FormGroup;\n  username = '';\n  password = '';\n  showLoader = false;\n  matcher = new MyErrorStateMatcher();\n  constructor(\n    private authService: AuthService,\n    private navigatorService: NavigatorService,\n    private formBuilder: FormBuilder,\n    private storageService: StorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: [null, Validators.required],\n      password: [null, Validators.required],\n    });\n  }\n\n  onFormSubmit(): void {\n    this.showLoader = true;\n    this.login();\n  }\n\n  login(): void {\n    this.authService.login(this.loginForm.value).subscribe(\n      (response: PostResponseModel) => {\n        console.log(response);\n        this.showLoader = false;\n        this.storageService.saveAccessToken(response.access_token);\n        this.storageService.saveRefreshToken(response.refresh_token);\n        this.storageService.setLoggedIn(true);\n        this.navigatorService.navigateToCameras();\n      },\n      (error: ErrorResponseModel) => {\n        this.authService.isUserLoggedIn = false;\n        alert(error.error.error_description);\n        this.loginForm.reset();\n        this.showLoader = false;\n      }\n    );\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-loading-shade\" *ngIf=\"showLoader\">\n    <mat-spinner *ngIf=\"showLoader\"></mat-spinner>\n  </div>\n  <mat-card *ngIf=\"!showLoader\" class=\"example-card\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onFormSubmit()\">\n      <h2>{{ TEXTS.LOGIN_TEXT }}</h2>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>{{ TEXTS.USERNAME_LABEL }} </mat-label>\n        <input\n          matInput\n          placeholder=\"{{ TEXTS.USERNAME_LABEL }}\"\n          formControlName=\"username\"\n          [errorStateMatcher]=\"matcher\"\n        />\n\n        <mat-error>\n          <span\n            *ngIf=\"\n              !loginForm.get('username').valid &&\n              loginForm.get('username').touched\n            \"\n            >{{ TEXTS.USERNAME_ERROR }}</span\n          >\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>{{ TEXTS.PASSWORD_LABEL }} </mat-label>\n        <input\n          type=\"password\"\n          matInput\n          placeholder=\"{{ TEXTS.PASSWORD_LABEL }}\"\n          formControlName=\"password\"\n          [errorStateMatcher]=\"matcher\"\n        />\n\n        <mat-error>\n          <span\n            *ngIf=\"\n              !loginForm.get('password').valid &&\n              loginForm.get('password').touched\n            \"\n            >{{ TEXTS.PASSWORD_ERROR }}</span\n          >\n        </mat-error>\n      </mat-form-field>\n      <div class=\"button-row\">\n        <button\n          type=\"submit\"\n          [disabled]=\"!loginForm.valid\"\n          mat-flat-button\n          color=\"primary\"\n        >\n          <mat-icon>login</mat-icon>{{ TEXTS.LOGIN_BUTTON_TEXT }}\n        </button>\n      </div>\n    </form>\n  </mat-card>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport {\n  CameraAccessErrorModel,\n  CameraResponseModel,\n  CameraStatusResponseModel,\n  ErrorResponseModel,\n} from '../models/response.model';\nimport { CAMERA_END_POINT, STATIC_TEXTS } from '../constant';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavigatorService } from '../services/navigator.service';\nimport { StorageService } from '../services/token.service';\n@Component({\n  selector: 'app-camera-detail',\n  templateUrl: './camera-detail.component.html',\n  styleUrls: ['./camera-detail.component.scss'],\n})\nexport class CameraDetailComponent implements OnInit {\n  showLoader = false;\n  TEXTS = STATIC_TEXTS;\n  cameraId = null;\n  cameraStatus = null;\n  cameraDetail: CameraResponseModel = null;\n  constructor(\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private navigatorService: NavigatorService,\n    private storageService: StorageService\n  ) {\n    this.activatedRoute.params.subscribe((params) => {\n      this.cameraId = params['id'];\n      this.getCameraDetails(this.cameraId);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getCameraDetails(cameraId: Number): void {\n    this.showLoader = true;\n    if (cameraId) {\n      //check if the details is already present for given camera ID\n\n      const details = this.storageService.getCameraDetails(cameraId);\n      if (details) {\n        this.cameraDetail = JSON.parse(details) as any;\n        this.showLoader = false;\n        return;\n      }\n\n      this.authService.get(`${CAMERA_END_POINT}/${cameraId}`).subscribe(\n        (response: CameraResponseModel) => {\n          this.cameraDetail = response;\n\n          //save to local storage\n          this.storageService.setCameraDetails(\n            cameraId,\n            JSON.stringify(response)\n          );\n          this.showLoader = false;\n        },\n        (error: CameraAccessErrorModel) => {\n          alert(error.error.title);\n          this.showLoader = false;\n        }\n      );\n    } else {\n      console.log('No Camera ID');\n    }\n  }\n\n  getStatus(cameraId: Number) {\n    this.showLoader = true;\n    if (cameraId) {\n      const details = this.storageService.getCameraStatus(cameraId);\n      if (details) {\n        this.cameraStatus = JSON.parse(details) as any;\n        this.showLoader = false;\n        return;\n      }\n      this.authService.get(`${CAMERA_END_POINT}/${cameraId}/status`).subscribe(\n        (response: CameraStatusResponseModel) => {\n          //save to local storage\n          this.storageService.setCameraStatus(\n            cameraId,\n            JSON.stringify(response)\n          );\n          this.cameraStatus = response;\n          this.showLoader = false;\n        },\n        (error: CameraAccessErrorModel) => {\n          alert(error.error.title);\n          this.showLoader = false;\n        }\n      );\n    } else {\n      console.log('No camera ID');\n    }\n  }\n\n  GoBackToCameras() {\n    this.navigatorService.navigateToCameras();\n  }\n}\n","<div>\n  <div class=\"example-loading-shade\" *ngIf=\"showLoader\">\n    <mat-spinner *ngIf=\"showLoader\"></mat-spinner>\n  </div>\n  <mat-card *ngIf=\"cameraDetail\" class=\"mat-card-camera\">\n    <mat-card-title>\n      {{ cameraDetail.name }}\n    </mat-card-title>\n    <mat-card-subtitle\n      >{{ TEXTS.ID }}: {{ cameraDetail.cameraId }}</mat-card-subtitle\n    >\n    <mat-card-actions>\n      <button\n        type=\"submit\"\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"GoBackToCameras()\"\n      >\n        <mat-icon>keyboard_backspace</mat-icon>{{ TEXTS.BACK_BUTTON_LABEL }}\n      </button>\n      <button\n        type=\"submit\"\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"getStatus(cameraDetail.cameraId)\"\n      >\n        <mat-icon>details icon</mat-icon>{{ TEXTS.SHOW_DETAILS }}\n      </button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card *ngIf=\"cameraStatus\" class=\"mat-card-camera\">\n    <mat-card-title>\n      {{ TEXTS.ONLINE }}: {{ cameraStatus.online }}\n    </mat-card-title>\n    <mat-card-subtitle\n      >{{ TEXTS.RECORDING_ON_CLOUD }}:\n      {{ cameraStatus.recordingOnCloud }}</mat-card-subtitle\n    >\n    <mat-card-subtitle\n      >{{ TEXTS.AUDIO_ENABLED }}:\n      {{ cameraStatus.audioEnabled }}</mat-card-subtitle\n    >\n    <mat-card-subtitle\n      >{{ TEXTS.FIRMWARE_STATUS }}:\n      {{ cameraStatus.firmwareStatus }}</mat-card-subtitle\n    >\n    <mat-card-subtitle\n      >{{ TEXTS.RECORDING_ON_SD }}:\n      {{ cameraStatus.recordingOnSd }}</mat-card-subtitle\n    >\n  </mat-card>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}